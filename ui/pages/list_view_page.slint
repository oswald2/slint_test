// Copyright Â© SixtyFPS GmbH <info@slint-ui.com>
// SPDX-License-Identifier: GPL-3.0-only OR LicenseRef-Slint-commercial

import { Slider, HorizontalBox, VerticalBox, ListView, StandardListView, GroupBox } from "std-widgets.slint";
import { GallerySettings } from "../gallery_settings.slint";
import { Page } from "page.slint";

export component ListViewPage inherits Page {
    title: "ListView";
    description: "ListViews can be used to display a list of elements. The StandardListBox is like the default ListView just with a default text based definition of the visual items. Both can be imported from \"std-widgets.slint\"";

    in-out property <float> pitch: 0.15;
    in-out property <float> yaw: 0.5;

    GroupBox {  
        title: "Plot Test";

        VerticalLayout {
            vertical-stretch: 1;
            alignment: start;
        
            Image {
                source: GallerySettings.render_plot(root.width, root.pitch, root.yaw, amplitude-slider.value / 10);
                touch := TouchArea {
                    property <float> pressed-pitch;
                    property <float> pressed-yaw;
                    pointer-event(event) => {
                        if (event.button == PointerEventButton.left && event.kind == PointerEventKind.down) {
                            self.pressed-pitch = root.pitch;
                            self.pressed-yaw = root.yaw;
                        }
                    }
                    moved => {
                        if (self.enabled && self.pressed) {
                            root.pitch = self.pressed-pitch + (touch.mouse-y - touch.pressed-y) / self.height * 3.14;
                            root.yaw = self.pressed-yaw - (touch.mouse-x - touch.pressed-x) / self.width * 3.14;
                        }
                    }
                    mouse-cursor: self.pressed ? MouseCursor.grabbing : MouseCursor.grab;
                }
            }

            HorizontalBox {
                Text {
                    text: "Amplitude:";
                    font-weight: 600;
                    vertical-alignment: center;
                }
                amplitude-slider := Slider {
                    minimum: 0;
                    maximum: 100;
                    value: 50;
                }
            }
        }
    }
}
